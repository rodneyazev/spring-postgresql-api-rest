package com.spring.app.resources;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.hateoas.EntityModel;
import org.springframework.hateoas.Link;
import org.springframework.hateoas.server.mvc.WebMvcLinkBuilder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.spring.app.model.Product;
import com.spring.app.repository.ProductRepository;

@RestController
public class ProductResource {
	
	@Autowired
	ProductRepository productRepository;
	
	@GetMapping("/product")
	public List<Product> productListMany() {
		return productRepository.findAll();
	}
	
	@GetMapping("/product/{id}")
	public Product productListOne(@PathVariable(value="id") long id) {
		// return productRepository.findById(id);
	}
	
	@PostMapping("/product")	
	public Product productSave(@RequestBody Product product) {
		return productRepository.save(product);
	}
	
	@DeleteMapping("/product/{id}")
	public void productDelete(@PathVariable(value="id") long id) {
		productRepository.deleteById(id);
	}
	
	@PutMapping("/product/{id}")	
	public Product productUpdate(@RequestBody Product product, @PathVariable(value="id") long id) {
		product.setId(id);
		return productRepository.save(product);
	}
	
	/* This method will require the whole body, including the id
	@PutMapping("/product")
	public Product productUpdate(@RequestBody Product product) {
		return productRepository.save(product);
	} */
	
}
